{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Logistic Regression Pytorch","provenance":[],"authorship_tag":"ABX9TyMDG+5ca1xJPyx6Wy9qcFsi"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"eoeaNc5SonV0"},"source":["<img src =\"https://miro.medium.com/max/573/1*UgYbimgPXf6XXxMy2yqRLw.png\"/>\n","\n","**Logistic regression** is a statistical model that in its basic form uses a logistic function to model a binary dependent variable, although many more complex extensions exist.\n","\n","for detail informatio, visit [here](https://towardsdatascience.com/logistic-regression-detailed-overview-46c4da4303bc)\n"]},{"cell_type":"code","metadata":{"id":"dV_MAC-IaUOu","executionInfo":{"status":"ok","timestamp":1604823616342,"user_tz":-420,"elapsed":2397,"user":{"displayName":"Yogie Meysa Tama","photoUrl":"","userId":"17632001037686016329"}}},"source":["import torch\n","from torch import nn, optim\n","import torchvision\n","import torchvision.transforms as transforms\n","\n","import matplotlib.pyplot as plt\n","from sklearn.linear_model import LogisticRegression"],"execution_count":89,"outputs":[]},{"cell_type":"code","metadata":{"id":"qN9MuF7DajsF","executionInfo":{"status":"ok","timestamp":1604815076854,"user_tz":-420,"elapsed":1070,"user":{"displayName":"Yogie Meysa Tama","photoUrl":"","userId":"17632001037686016329"}}},"source":["# Hyper Parameter\n","input_size = 28 * 28\n","num_classes = 10\n","num_epochs = 5\n","batch_size = 100\n","learning_rate = 0.001"],"execution_count":8,"outputs":[]},{"cell_type":"code","metadata":{"id":"vuJ1VDWravwJ","executionInfo":{"status":"ok","timestamp":1604815733640,"user_tz":-420,"elapsed":1071,"user":{"displayName":"Yogie Meysa Tama","photoUrl":"","userId":"17632001037686016329"}}},"source":["# MNIST Dataset\n","train_dataset = torchvision.datasets.MNIST(\"../../data\",\n","                                           train = True,\n","                                           transform = transforms.ToTensor(),\n","                                           download = True)\n","\n","test_dataset = torchvision.datasets.MNIST(\"../../data\",\n","                                           train = False,\n","                                           transform = transforms.ToTensor())"],"execution_count":30,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"B0toNLR1gtn1"},"source":["## Sklearn"]},{"cell_type":"code","metadata":{"id":"P72R_IUPgu81","executionInfo":{"status":"ok","timestamp":1604816934264,"user_tz":-420,"elapsed":1551,"user":{"displayName":"Yogie Meysa Tama","photoUrl":"","userId":"17632001037686016329"}},"outputId":"d41bc416-75f9-4acc-d861-7c4f66cf7d06","colab":{"base_uri":"https://localhost:8080/","height":394}},"source":["x_train = train_dataset.data.numpy()\n","y_train = train_dataset.targets.numpy()\n","\n","x_test = test_dataset.data.numpy()\n","y_test = test_dataset.targets.numpy()\n","\n","rows, columns = 3, 3\n","count = 0\n","fig, ax = plt.subplots(rows, columns)\n","fig.set_size_inches(5, 6)\n","for row in range(rows):\n","  for column in range(columns):\n","    ax[row, column].imshow(x_train[count], cmap = \"gray\")\n","    ax[row, column].set_title(y_train[count])\n","    count += 1\n","\n","print(\"Image Data Shape \", x_train.shape)\n","plt.show()"],"execution_count":69,"outputs":[{"output_type":"stream","text":["Image Data Shape  (60000, 28, 28)\n"],"name":"stdout"},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 360x432 with 9 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"Up-9urlvi3R-","executionInfo":{"status":"ok","timestamp":1604817012354,"user_tz":-420,"elapsed":1283,"user":{"displayName":"Yogie Meysa Tama","photoUrl":"","userId":"17632001037686016329"}}},"source":["# reshape\n","x_train = x_train.reshape(-1, input_size)\n","x_test = x_test.reshape(-1, input_size)"],"execution_count":72,"outputs":[]},{"cell_type":"code","metadata":{"id":"Z9PG1o5eiTsO","executionInfo":{"status":"ok","timestamp":1604816815083,"user_tz":-420,"elapsed":1098,"user":{"displayName":"Yogie Meysa Tama","photoUrl":"","userId":"17632001037686016329"}}},"source":["# all parameters not specified are set to their defaults\n","logisticRegr = LogisticRegression()"],"execution_count":65,"outputs":[]},{"cell_type":"code","metadata":{"id":"WhVOxnUYiUyO","executionInfo":{"status":"ok","timestamp":1604817052694,"user_tz":-420,"elapsed":35719,"user":{"displayName":"Yogie Meysa Tama","photoUrl":"","userId":"17632001037686016329"}},"outputId":"40942221-85be-472f-fc82-8ea6258f3242","colab":{"base_uri":"https://localhost:8080/"}},"source":["logisticRegr.fit(x_train, y_train)"],"execution_count":73,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/sklearn/linear_model/_logistic.py:940: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG)\n"],"name":"stderr"},{"output_type":"execute_result","data":{"text/plain":["LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,\n","                   intercept_scaling=1, l1_ratio=None, max_iter=100,\n","                   multi_class='auto', n_jobs=None, penalty='l2',\n","                   random_state=None, solver='lbfgs', tol=0.0001, verbose=0,\n","                   warm_start=False)"]},"metadata":{"tags":[]},"execution_count":73}]},{"cell_type":"code","metadata":{"id":"kao-ue4ZjMZK","executionInfo":{"status":"ok","timestamp":1604817052698,"user_tz":-420,"elapsed":6729,"user":{"displayName":"Yogie Meysa Tama","photoUrl":"","userId":"17632001037686016329"}},"outputId":"3ec270c3-fbc0-4fff-ec1e-e6a4ceefcf3a","colab":{"base_uri":"https://localhost:8080/"}},"source":["# Use score method to get accuracy of model\n","score = logisticRegr.score(x_test, y_test)\n","print(score)"],"execution_count":74,"outputs":[{"output_type":"stream","text":["0.9255\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"ihhNN3r0gf-S"},"source":["## PyTorch"]},{"cell_type":"code","metadata":{"id":"8xAwT1T8nlk_"},"source":["# Data Loader\n","train_loader = torch.utils.data.DataLoader(dataset=train_dataset,\n","                                           batch_size = batch_size,\n","                                           shuffle = True)\n","\n","test_loader = torch.utils.data.DataLoader(dataset=test_dataset, \n","                                          batch_size=batch_size, \n","                                          shuffle=False)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"z3BdSiMKbbCI","executionInfo":{"status":"ok","timestamp":1604815082370,"user_tz":-420,"elapsed":1010,"user":{"displayName":"Yogie Meysa Tama","photoUrl":"","userId":"17632001037686016329"}}},"source":["# logistic regression model\n","model = nn.Linear(input_size, num_classes)"],"execution_count":9,"outputs":[]},{"cell_type":"code","metadata":{"id":"tS0b0W2_bs8S","executionInfo":{"status":"ok","timestamp":1604815132612,"user_tz":-420,"elapsed":1124,"user":{"displayName":"Yogie Meysa Tama","photoUrl":"","userId":"17632001037686016329"}}},"source":["# loss and optimizer\n","criterion = nn.CrossEntropyLoss()\n","optimizer = torch.optim.SGD(model.parameters(), lr = learning_rate) "],"execution_count":10,"outputs":[]},{"cell_type":"code","metadata":{"id":"ve8FH7mlb5MG","executionInfo":{"status":"ok","timestamp":1604815561405,"user_tz":-420,"elapsed":22456,"user":{"displayName":"Yogie Meysa Tama","photoUrl":"","userId":"17632001037686016329"}},"outputId":"f15edf44-6fb6-4de0-95b5-98cbcd8c7847","colab":{"base_uri":"https://localhost:8080/"}},"source":["# train model\n","total_step = len(train_loader)\n","for epoch in range(num_epochs):\n","  for i, (images, labels) in enumerate(train_loader):\n","    # reshape image to batch size \n","    images = images.view(-1,  input_size)\n","\n","    # forward pass\n","    outputs = model(images)\n","    loss = criterion(outputs, labels)\n","\n","    # backward and optimize\n","    optimizer.zero_grad()\n","    loss.backward()\n","    optimizer.step()\n","\n","    if (i+1) % 100 == 0:\n","      print ('Epoch [{}/{}], Step [{}/{}], Loss: {:.4f}'.format(epoch+1, num_epochs, i+1, total_step, loss.item()))"],"execution_count":26,"outputs":[{"output_type":"stream","text":["Epoch [1/5], Step [100/600], Loss: 1.7461\n","Epoch [1/5], Step [200/600], Loss: 1.7636\n","Epoch [1/5], Step [300/600], Loss: 1.6653\n","Epoch [1/5], Step [400/600], Loss: 1.6464\n","Epoch [1/5], Step [500/600], Loss: 1.5631\n","Epoch [1/5], Step [600/600], Loss: 1.5187\n","Epoch [2/5], Step [100/600], Loss: 1.3835\n","Epoch [2/5], Step [200/600], Loss: 1.4479\n","Epoch [2/5], Step [300/600], Loss: 1.4201\n","Epoch [2/5], Step [400/600], Loss: 1.3872\n","Epoch [2/5], Step [500/600], Loss: 1.4191\n","Epoch [2/5], Step [600/600], Loss: 1.3115\n","Epoch [3/5], Step [100/600], Loss: 1.1313\n","Epoch [3/5], Step [200/600], Loss: 1.2898\n","Epoch [3/5], Step [300/600], Loss: 1.1319\n","Epoch [3/5], Step [400/600], Loss: 1.2117\n","Epoch [3/5], Step [500/600], Loss: 1.0805\n","Epoch [3/5], Step [600/600], Loss: 1.1570\n","Epoch [4/5], Step [100/600], Loss: 1.1580\n","Epoch [4/5], Step [200/600], Loss: 1.0828\n","Epoch [4/5], Step [300/600], Loss: 1.1431\n","Epoch [4/5], Step [400/600], Loss: 1.0172\n","Epoch [4/5], Step [500/600], Loss: 1.0776\n","Epoch [4/5], Step [600/600], Loss: 0.9577\n","Epoch [5/5], Step [100/600], Loss: 0.9403\n","Epoch [5/5], Step [200/600], Loss: 0.9982\n","Epoch [5/5], Step [300/600], Loss: 1.0283\n","Epoch [5/5], Step [400/600], Loss: 0.9152\n","Epoch [5/5], Step [500/600], Loss: 0.9399\n","Epoch [5/5], Step [600/600], Loss: 1.1839\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"37AZV7AHcpUO","executionInfo":{"status":"ok","timestamp":1604815771565,"user_tz":-420,"elapsed":1364,"user":{"displayName":"Yogie Meysa Tama","photoUrl":"","userId":"17632001037686016329"}},"outputId":"fd6008b3-2f4c-4b68-be27-06da7f6c7661","colab":{"base_uri":"https://localhost:8080/"}},"source":["# test the model\n","with torch.no_grad():\n","  correct = 0\n","  total = 0\n","  for images, labels in test_loader:\n","    images = images.view(-1, input_size)\n","    outputs = model(images)\n","    _, predicted = torch.max(outputs.data, 1)\n","    total += labels.size(0)\n","    correct += (predicted == labels).sum()\n","  print('Accuracy of the model on the 10000 test images: {} %'.format(100 * correct / total))"],"execution_count":34,"outputs":[{"output_type":"stream","text":["Accuracy of the model on the 10000 test images: 83.37999725341797 %\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"bLwUD7W_lgyW","executionInfo":{"status":"ok","timestamp":1604817688929,"user_tz":-420,"elapsed":3942,"user":{"displayName":"Yogie Meysa Tama","photoUrl":"","userId":"17632001037686016329"}},"outputId":"ccfbe2e0-4566-4c4c-aa5e-3d89138362d0","colab":{"base_uri":"https://localhost:8080/"}},"source":["torch.max(outputs.data, 1)"],"execution_count":78,"outputs":[{"output_type":"execute_result","data":{"text/plain":["torch.return_types.max(...)"]},"metadata":{"tags":[]},"execution_count":78}]}]}